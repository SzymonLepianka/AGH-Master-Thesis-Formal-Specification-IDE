{
  "Seq": {
    "number of args": 2,
    "rules": [
      "arg0",
      "arg1",
      "Exist(arg0)",
      "ForAll(arg0 => Exist(arg1))",
      "ForAll(~(arg0 ^ arg1))"
    ]
  },
  "SeqSeq": {
    "number of args": 3,
    "rules": [
      "arg0",
      "arg2",
      "Exist(arg0)",
      "ForAll(arg0 => Exist(arg1))",
      "ForAll(~(arg0 ^ arg1))"
    ]
  },
  "Alt": {
    "number of args": 3,
    "rules": [
      "arg0",
      "arg2",
      "Exist(arg0)",
      "ForAll(arg0 => Exist(arg1))",
      "ForAll(~(arg0 ^ arg1))"
    ]
  },
  "Branch": {
    "number of args": 3,
    "rules": [
      "arg0",
      "arg1 | arg2",
      "Exist(arg0)",
      "ForAll(arg0 => (Exist(arg1) ^ ~(Exist(arg2)) | (~(Exist(arg1)) ^ Exist(arg2))))",
      "ForAll(arg0Plus => Exist(arg1))",
      "ForAll(arg0Minus => Exist(arg2))",
      "ForAll(~(arg0 ^ arg1))",
      "ForAll(~(arg0 ^ arg2))"
    ]
  },
  "BranchRe": {
    "number of args": 3,
    "rules": [
      "arg0 | arg1",
      "arg2",
      "(Exist(arg0) ^ ~Exist(arg1)) | (~Exist(arg0) ^ Exist(arg1))",
      "ForAll(arg0 | arg1 => Exist(arg2))",
      "ForAll(~(arg0 ^ arg2))",
      "ForAll(~(arg1 ^ arg2))"
    ]
  },
  "Concur": {
    "number of args": 3,
    "rules": [
      "arg0",
      "arg1 | arg2",
      "Exist(arg0)",
      "ForAll(arg0 => Exist(arg1) ^ Exist(arg2))",
      "ForAll(~(arg0 ^ arg1))",
      "ForAll(~(arg0 ^ arg2))"
    ]
  },
  "ConcurRe": {
    "number of args": 3,
    "rules": [
      "arg0 | arg1",
      "arg2",
      "Exist(arg0)",
      "Exist(arg1)",
      "ForAll(arg0 => Exist(arg2))",
      "ForAll(arg1 => Exist(arg2))",
      "ForAll(~(arg0 ^ arg2))",
      "ForAll(~(arg1 ^ arg2))"
    ]
  },
  "Cond": {
    "number of args": 4,
    "rules": [
      "arg0",
      "arg3",
      "Exist(arg0)",
      "ForAll(arg0 => ((Exist(arg1) ^ ~(Exist(arg2))) | (~(Exist(arg1)) ^ Exist(arg2))))",
      "ForAll(arg0Plus => Exist(arg1))",
      "ForAll(arg0Minus => Exist(arg2))",
      "ForAll(arg1 | arg2 => Exist(arg3))",
      "ForAll(~(arg0 ^ (arg1 | arg2)))",
      "ForAll(~((arg1 | arg2) ^ arg3))"
    ]
  },
  "Para": {
    "number of args": 4,
    "rules": [
      "arg0",
      "arg3",
      "Exist(arg0)",
      "ForAll(arg0 => Exist(arg1) ^ Exist(arg2))",
      "ForAll(arg1 => Exist(arg3))",
      "ForAll(arg2 => Exist(arg3))",
      "ForAll(~(arg0 ^ (arg1 | arg2)))",
      "ForAll(~((arg1 | arg2) ^ arg3))"
    ]
  },
  "Loop": {
    "number of args": 4,
    "rules": [
      "arg0",
      "arg3",
      "Exist(arg0)",
      "ForAll(arg0 => Exist(arg1))",
      "ForAll(arg1 => (Exist(arg2) ^ Exist(arg3)) | (~Exist(arg2) ^ Exist(arg3)))",
      "ForAll(arg1 ^ arg1 => Exist(arg2))",
      "ForAll(arg1 ^ arg1 => ~Exist(arg2) ^ Exist(arg3))",
      "ForAll(arg2 => Exist(arg1))",
      "ForAll(arg3 => ~Exist(arg1) ^ ~Exist(arg2))",
      "ForAll(~(arg0 ^ (arg1 | arg2 | arg3)))",
      "ForAll(~(arg1 ^ (arg0 | arg2 | arg3)))",
      "ForAll(~(arg2 ^ (arg0 | arg1 | arg3)))",
      "ForAll(~(arg3 ^ (arg0 | arg1 | arg2)))"
    ]
  }
}
